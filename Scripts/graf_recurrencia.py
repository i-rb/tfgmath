# -*- coding: utf-8 -*-
"""graf_recurrencia.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nTRZQ7OjctFSQ_8kGVTTXFVAyb9MdOLn
"""

import seaborn as sns
import pandas as pd
from matplotlib import pyplot
import numpy as np
import math as mt
from PIL import Image

x=pd.read_csv("retorn.csv",header=None) # debe subirse retorn.csv etc
y=pd.read_csv("arma11.csv",header=None) # debe subirse retorn.csv etc
z=pd.read_csv("garc11.csv",header=None) # debe subirse retorn.csv etc
w=pd.read_csv("egar21.csv",header=None) # debe subirse retorn.csv etc

w

a4_dims = (20, 6)
fig, ax = pyplot.subplots(figsize=a4_dims)
sns.lineplot(range(len(x[0])),x[0])

xe=x[0].values

arr=[]
eps=0.005
for i in range(len(xe)):
  for j in range(len(xe)):
    if abs(xe[i]-xe[j])<eps:
      arr.append(0)
    else:
      arr.append(255)
arr=np.array(arr)
arr=arr.astype(np.uint8)
arr.resize((len(xe),len(xe)))
im = Image.fromarray(arr,mode="L")
im.show()
im.resize((600,600))

xe=y[0].values
arr=[]
eps=0.005
for i in range(len(xe)):
  for j in range(len(xe)):
    if abs(xe[i]-xe[j])<eps:
      arr.append(0)
    else:
      arr.append(255)
arr=np.array(arr)
arr=arr.astype(np.uint8)
arr.resize((len(xe),len(xe)))
im = Image.fromarray(arr,mode="L")
im.show()
im.resize((600,600))

xe=z[0].values
arr=[]
eps=0.5
for i in range(len(xe)):
  for j in range(len(xe)):
    if abs(xe[i]-xe[j])<eps:
      arr.append(0)
    else:
      arr.append(255)
arr=np.array(arr)
arr=arr.astype(np.uint8)
arr.resize((len(xe),len(xe)))
im = Image.fromarray(arr,mode="L")
im.show()
im.resize((600,600))

xe=w[0].values
arr=[]
eps=0.5
for i in range(len(xe)):
  for j in range(len(xe)):
    if abs(xe[i]-xe[j])<eps:
      arr.append(0)
    else:
      arr.append(255)
arr=np.array(arr)
arr=arr.astype(np.uint8)
arr.resize((len(xe),len(xe)))
im = Image.fromarray(arr,mode="L")
im.show()
im.resize((600,600))



